{"version":3,"file":"static/js/126.7141cbe6.chunk.js","mappings":"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","sources":["shared/navbar/logo-type/LogoType.tsx","shared/color-mode-button/ColorModeButton.tsx","shared/navbar/drawer/Drawer.tsx","shared/navbar/Navbar.tsx","shared/content/Content.tsx","shared/socials/Socials.tsx","utils/Functions.ts"],"sourcesContent":["import { FC } from \"react\";\n\nimport { Box, Text, useBreakpointValue } from \"@chakra-ui/react\";\n\ninterface Props {\n    text: {\n        mobile: string;\n        desktop: string;\n    };\n}\n\nexport const LogoType: FC<Props> = ({ text }) => {\n    const variant = useBreakpointValue({ base: text.mobile, md: text.desktop });\n\n    return (\n        <Box transition=\"all 0.2s ease-in-out\" _hover={{ cursor: \"pointer\", color: \"primary.600\" }}>\n            <Text fontSize={{ base: \"3xl\", md: \"4xl\" }} lineHeight=\"1\" fontFamily=\"Signature\" mb={{ base: 0, md: -2 }}>\n                {variant}\n            </Text>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { HStack, IconButton, StyleProps, useColorMode, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { MoonIcon, SunIcon } from \"utils/Icons\";\n\nexport const ColorModeButton: FC<StyleProps> = (props) => {\n    const color = useColorModeValue(\"gray.800\", \"white\");\n    const { colorMode, toggleColorMode } = useColorMode();\n\n    return (\n        <HStack {...props}>\n            <IconButton\n                aria-label=\"appearance\"\n                bg=\"transparent\"\n                color={color}\n                fontSize=\"lg\"\n                _hover={{ color: \"primary.500\" }}\n                _active={{ bg: \"transparent\" }}\n                icon={colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\n                variant=\"ghost\"\n                size=\"xs\"\n                onClick={() => {\n                    toggleColorMode();\n                    window.scrollBy(0, 1);\n                    window.scrollBy(0, -1);\n                }}\n                w=\"32px\"\n                h=\"32px\"\n            />\n        </HStack>\n    );\n};\n","import { FC, useRef } from \"react\";\n\nimport {\n    Box,\n    Button,\n    Drawer,\n    DrawerBody,\n    DrawerHeader,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure,\n    IconButton,\n    StyleProps,\n    Flex,\n    VStack,\n    useColorModeValue,\n} from \"@chakra-ui/react\";\n\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\nimport { AboutPageId, WorkPageId } from \"utils/useScroll\";\nimport { MenuIcon } from \"utils/Icons\";\nimport { Socials } from \"shared/socials/Socials\";\nimport { onResumeOpen } from \"utils/Functions\";\n\ninterface Props extends StyleProps {\n    onSectionClick: (section: string) => void;\n    currentPage: string;\n}\n\nexport const MenuDrawer: FC<Props> = ({ onSectionClick, currentPage, ...props }) => {\n    const { isOpen, onOpen, onClose } = useDisclosure();\n    const btnRef = useRef<any>(null);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n\n    return (\n        <Box {...props}>\n            <Button\n                as={IconButton}\n                variant=\"icon\"\n                ref={btnRef}\n                onClick={onOpen}\n                aria-label=\"open drawer\"\n                fontSize=\"lg\"\n                color=\"primary.500\"\n                icon={<MenuIcon />}\n                px=\"0\"\n            />\n            <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} autoFocus={false}>\n                <DrawerOverlay />\n                <DrawerContent>\n                    <DrawerHeader px=\"4\">\n                        <Flex justifyContent=\"space-between\">\n                            <ColorModeButton />\n                            <DrawerCloseButton position=\"relative\" top=\"0\" right=\"0\" />\n                        </Flex>\n                    </DrawerHeader>\n\n                    <DrawerBody>\n                        <VStack spacing=\"6\" my=\"16\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(WorkPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => {\n                                    onClose();\n                                    setTimeout(() => {\n                                        onSectionClick(AboutPageId);\n                                    }, 250);\n                                }}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                About\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color=\"primary.500\"\n                                onClick={onResumeOpen}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"400\"\n                                fontWeight=\"600\"\n                                fontSize=\"2xl\"\n                            >\n                                Resume\n                            </Button>\n                        </VStack>\n                        <Flex justifyContent=\"center\" mt=\"16\">\n                            <Socials delay={100} resume={false} />\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n        </Box>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Box, Button, Container, Flex, HStack, useColorModeValue } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { LogoType } from \"shared/navbar/logo-type/LogoType\";\nimport { bgDark, bgLight } from \"theme\";\nimport { onResumeOpen } from \"utils/Functions\";\nimport { AboutPageId, useScroll, WorkPageId } from \"utils/useScroll\";\nimport { MenuDrawer } from \"./drawer/Drawer\";\nimport { ColorModeButton } from \"shared/color-mode-button/ColorModeButton\";\n\nexport const Navbar: FC = () => {\n    const bg = useColorModeValue(bgLight, bgDark);\n    const navItemColor = useColorModeValue(\"gray.800\", \"white\");\n    const currentPage = useScroll();\n\n    const toSection = (section: string) => {\n        document.getElementById(section)?.scrollIntoView({ behavior: \"smooth\" });\n    };\n\n    return (\n        <Box bg={bg} position=\"fixed\" top=\"0\" w=\"100%\" left=\"50%\" transform=\"translate(-50%)\" zIndex=\"10\">\n            <Container py=\"4\" px=\"4\" data-aos=\"fade-down\" data-aos-duration=\"500\" data-aos-delay=\"100\">\n                <Flex justifyContent=\"space-between\" alignItems=\"center\">\n                    <LogoType text={configs.common.logoType} />\n                    <Flex alignItems=\"center\" display={{ base: \"none\", md: \"flex\" }}>\n                        <HStack spacing=\"8\" mr=\"6\">\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration=\"underline\"\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor={currentPage === WorkPageId ? \"primary.500\" : \"transparent\"}\n                                onClick={() => toSection(WorkPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"200\"\n                            >\n                                Work\n                            </Button>\n                            <Button\n                                variant=\"link\"\n                                color={navItemColor}\n                                textDecoration={currentPage === AboutPageId ? \"underline\" : \"none\"}\n                                textDecorationThickness=\"2px\"\n                                textDecorationColor=\"primary.500\"\n                                onClick={() => toSection(AboutPageId)}\n                                data-aos=\"fade\"\n                                data-aos-delay=\"300\"\n                            >\n                                About\n                            </Button>\n                            <Button variant=\"link\" onClick={onResumeOpen} data-aos=\"fade\" data-aos-delay=\"400\">\n                                Resume\n                            </Button>\n                        </HStack>\n                        <ColorModeButton />\n                    </Flex>\n\n                    <MenuDrawer\n                        currentPage={currentPage}\n                        onSectionClick={toSection}\n                        display={{ base: \"block\", md: \"none\" }}\n                    />\n                </Flex>\n            </Container>\n        </Box>\n    );\n};\n","import { FC, useEffect, useState } from \"react\";\n\nimport { Text, Stack, StyleProps, Link, UnorderedList } from \"@chakra-ui/react\";\nimport ReactMarkdown from \"react-markdown\";\n\nimport common from \"content/common/common.json\";\nimport landing from \"content/landing/landing-config.json\";\nimport featuredProjects from \"content/featured-projects/featured-projects-config.json\";\nimport otherProjects from \"content/other-projects/other-projects-config.json\";\nimport about from \"content/about/about-config.json\";\n\nimport LandingMd from \"content/landing/landing.md\";\nimport AboutMd from \"content/about/about.md\";\n\nexport const configs = {\n    common,\n    landing,\n    featuredProjects,\n    otherProjects,\n    about,\n};\n\ninterface State {\n    landing: string;\n    about: string;\n}\n\nexport enum MarkdownFile {\n    Landing = \"landing\",\n    About = \"about\",\n}\n\nconst Mapper = {\n    [MarkdownFile.Landing]: LandingMd,\n    [MarkdownFile.About]: AboutMd,\n};\n\nexport const useContent = (fileName: MarkdownFile) => {\n    const [data, setData] = useState<State>({ landing: \"\", about: \"\" });\n\n    useEffect(() => {\n        fetch(Mapper[fileName])\n            .then((res) => res.text())\n            .then((text) => setData((data) => ({ ...data, [fileName]: text })));\n    }, [fileName]);\n\n    return data;\n};\n\ninterface Props extends StyleProps {\n    children?: string;\n}\n\nexport const Content: FC<Props> = ({ children, ...rest }) => {\n    return (\n        <Stack spacing=\"4\">\n            <ReactMarkdown\n                components={{\n                    p: ({ node, ...props }) => <Text {...rest} {...props} />,\n                    a: ({ node, ...props }) => (\n                        <Link href={props.href} target=\"_blank\" color=\"primary.200\" {...props} />\n                    ),\n                    ul: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return (\n                            <UnorderedList\n                                {...rest}\n                                data-aos=\"fade\"\n                                listStylePosition=\"inside\"\n                                display=\"grid\"\n                                gridTemplateColumns=\"repeat(2, 1fr)\"\n                                listStyleType=\"'‣ '\"\n                                fontWeight=\"600\"\n                            />\n                        );\n                    },\n                    li: ({ node, ...props }) => {\n                        const { ordered, ...rest } = props;\n\n                        return <li data-aos=\"flip-up\" data-aos-delay={props.index * 100 + 400} {...rest} />;\n                    },\n                }}\n            >\n                {children as string}\n            </ReactMarkdown>\n        </Stack>\n    );\n};\n","import { FC } from \"react\";\n\nimport { Button, HStack, IconButton, Tooltip } from \"@chakra-ui/react\";\n\nimport { configs } from \"shared/content/Content\";\nimport { onResumeOpen, open } from \"utils/Functions\";\nimport { FacebookIcon, GitHubIcon, InstagramIcon, LinkedInIcon, MailIcon, YoutubeIcon } from \"utils/Icons\";\n\nconst LinksToIconMapper: Record<string, JSX.Element> = {\n    linkedin: <LinkedInIcon />,\n    github: <GitHubIcon />,\n    facebook: <FacebookIcon />,\n    instagram: <InstagramIcon />,\n    youtube: <YoutubeIcon />,\n    mail: <MailIcon />,\n};\n\ninterface Props {\n    resume?: boolean;\n    exclude?: Array<string>;\n    delay?: number;\n}\n\nexport const Socials: FC<Props> = ({ resume = true, exclude, delay = 800 }) => {\n    return (\n        <HStack spacing=\"5\">\n            {resume && (\n                <Button data-aos=\"fade\" data-aos-delay={delay} size=\"lg\" borderRadius=\"xl\" mr=\"2\" onClick={onResumeOpen}>\n                    Resume\n                </Button>\n            )}\n            {configs.common.socials.map(\n                (social, idx) =>\n                    !exclude?.includes(social.type) && (\n                        <Tooltip key={social.type} label={social.type} textTransform=\"capitalize\">\n                            <Button\n                                p=\"0\"\n                                aria-label={`${social.type}-button`}\n                                as={IconButton}\n                                variant=\"icon\"\n                                data-aos=\"fade\"\n                                data-aos-delay={idx * 100 + delay}\n                                fontSize={social.type === \"mail\" ? \"24pt\" : \"20pt\"}\n                                icon={LinksToIconMapper[social.type]}\n                                onClick={() => open(social.link)}\n                            />\n                        </Tooltip>\n                    ),\n            )}\n        </HStack>\n    );\n};\n","import { configs } from \"shared/content/Content\";\n\nexport const open = (link: string) => window.open(link, \"_blank\");\n\nexport const onResumeOpen = () => {\n    open(configs.common.resume);\n};\n\nexport const onMailTo = () => {\n    open(\"mailto:\" + configs.common.email);\n};\n"],"names":["LogoType","_ref","text","variant","useBreakpointValue","base","mobile","md","desktop","_jsx","Box","transition","_hover","cursor","color","children","Text","fontSize","lineHeight","fontFamily","mb","ColorModeButton","props","useColorModeValue","colorMode","toggleColorMode","useColorMode","HStack","_objectSpread","IconButton","bg","_active","icon","MoonIcon","SunIcon","size","onClick","window","scrollBy","w","h","MenuDrawer","onSectionClick","currentPage","_objectWithoutProperties","_excluded","isOpen","onOpen","onClose","useDisclosure","btnRef","useRef","navItemColor","_jsxs","Button","as","ref","MenuIcon","px","Drawer","placement","autoFocus","DrawerOverlay","DrawerContent","DrawerHeader","Flex","justifyContent","DrawerCloseButton","position","top","right","DrawerBody","VStack","spacing","my","textDecoration","textDecorationThickness","textDecorationColor","WorkPageId","setTimeout","fontWeight","AboutPageId","onResumeOpen","mt","Socials","delay","resume","Navbar","bgLight","bgDark","useScroll","toSection","section","_document$getElementB","document","getElementById","scrollIntoView","behavior","left","transform","zIndex","Container","py","alignItems","configs","common","logoType","display","mr","landing","featuredProjects","otherProjects","about","MarkdownFile","Mapper","Landing","LandingMd","About","AboutMd","useContent","fileName","data","setData","useState","useEffect","fetch","then","res","Content","rest","Stack","ReactMarkdown","components","p","_ref2","node","_excluded2","a","_ref3","_excluded3","Link","href","target","ul","_ref4","_excluded4","ordered","_excluded5","UnorderedList","listStylePosition","gridTemplateColumns","listStyleType","li","_ref5","_excluded6","_excluded7","index","LinksToIconMapper","linkedin","LinkedInIcon","github","GitHubIcon","facebook","FacebookIcon","instagram","InstagramIcon","youtube","YoutubeIcon","mail","MailIcon","exclude","borderRadius","socials","map","social","idx","includes","type","Tooltip","label","textTransform","concat","open","link","onMailTo","email"],"sourceRoot":""}